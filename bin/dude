#!/usr/bin/env node

'use strict';
var parser = require('minimist');
var mout = require('mout');
var dude = require('../lib');
var cli = require('../lib/utils/cli');
var renderer = require('../lib/utils/renderer');

var logger;

var raw_args = parser(process.argv.slice(2));
var args = cli.read(raw_args);

var command = args.commands.shift() || 'help';
var argument = args.commands.join(' ') || undefined;

// New Todo
// Remove this and try executing a command, and then return control to logger which
// further handles control to renderer. Keeps the application neatly organized.

// Include this code in the default section of switch statement
// Switching on command enabled. Check for any argument inside default
// Every case in switch further returns a logger instance.

switch(command){
    case 'new':
        cli.make(argument);
        break;
    case 'install':
        cli.install(argument, args.options);
        break;
    case 'version':
        cli.version();
        break;
    default:
        if(mout.object.has(dude.commands, command)){
            logger = dude.commands.help(argument);
        } else {
            logger = dude.commands.help();
        }
}

logger.on('error', function(err){
    renderer.error(err);
    process.exit(1);
});
logger.on('success', function(data){
    renderer.success(data);
});
/**
 * Debug info here
 */
//console.dir(args.commands);
//console.dir(args.options);
//console.dir(argument);